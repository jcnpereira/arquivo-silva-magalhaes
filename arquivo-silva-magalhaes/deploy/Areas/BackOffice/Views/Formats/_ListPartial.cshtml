@model IEnumerable<Format>

<div id="afsm-list-contents">
    <table class="table table-striped table-hover afsm-dohighlight">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FormatDescription)
                </th>

                <th>
                    @LayoutStrings.RelatedItems
                </th>

                <th>
                    @LayoutStrings.Actions
                </th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FormatDescription)
                </td>
                <td>
                    <a href="@Url.Action("Index", "Specimens", new { formatId = item.Id })">@SpecimenStrings.EntityNamePlural</a>
                </td>
                <td>
                    <form class="btn-group" method="post" action="@Url.Action("Delete", new { id = item.Id })">
                        <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-default" title="@LayoutStrings.Details">
                            <span class="glyphicon glyphicon-info-sign"></span>
                        </a>

                        <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-default" title="@LayoutStrings.Edit">
                            <span class="glyphicon glyphicon-edit"></span>
                        </a>

                        @Html.AntiForgeryToken()
                        <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger" title="@LayoutStrings.Delete" data-afsm-show-modal="true" data-afsm-delete-warning="@FormatStrings.DeleteWarningMessage">
                            <span class="glyphicon glyphicon-floppy-remove"></span>
                        </a>
                    </form>
                </td>
            </tr>
        }
    </table>

    <div class="panel-footer">
        <div class="text-center afsm-pagination">
            @*@Html.PagedListPager((IPagedList)Model, (p) => Url.Action("Index", new { pageNumber = p, query = ViewBag.Query }))*@
            @Html.PagedListPager((IPagedList)Model, (p) => Url.Action("Index", Url.AddQueryStringToRoute(ViewContext.RouteData.Values, Request, new { pageNumber = p })))
        </div>
    </div>
</div>

