@model IEnumerable<TranslatedViewModel<Image, ImageTranslation>>

<div id="afsm-list-contents">
    <table class="table table-striped table-hover afsm-dohighlight">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Translation.Title)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Entity.ImageCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Entity.ProductionDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Entity.IsVisible)
                </th>
                <th>
                    @LayoutStrings.RelatedItems
                </th>
                <th>
                    @LayoutStrings.Actions
                </th>
            </tr>
        </thead>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Translation.Title)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Entity.ImageCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Entity.ProductionDate)
                </td>
                <td>
                    @*@(item.Entity.IsVisible ? item.Entity.Document.Collection.IsVisible ? LayoutStrings.Yes : LayoutStrings.No + "*" : LayoutStrings.No)*@
                    @if (item.Entity.IsVisible && item.Entity.Document.Collection.IsVisible)
                    {
                        @LayoutStrings.Yes
                    }
                    else if (item.Entity.IsVisible && !item.Entity.Document.Collection.IsVisible)
                    {
                        @LayoutStrings.No<span>*</span>
                    }
                    else
                    {
                        @LayoutStrings.No
                    }
                </td>

                <td>
                    @Html.ActionLink(DocumentStrings.EntityName, "Details", "Documents", new { id = item.Entity.DocumentId }, null) |
                    @Html.ActionLink(SpecimenStrings.EntityNamePluralShort, "Index", "Specimens", new { imageId = item.Entity.Id }, null) |
                    @Html.ActionLink(ShowcasePhotoStrings.EntityNameShortPlural, "Index", "ShowcasePhotoes", new { imageId = item.Entity.Id }, null)
                </td>
                <td>
                    <form class="btn-group" method="post" action="@Url.Action("Delete", new { id = item.Entity.Id })">
                        <a href="@Url.Action("Details", new { id = item.Entity.Id })" class="btn btn-default" title="@LayoutStrings.Details">
                            <span class="glyphicon glyphicon-info-sign"></span>
                        </a>

                        <a href="@Url.Action("Edit", new { id = item.Entity.Id })" class="btn btn-default" title="@LayoutStrings.Edit">
                            <span class="glyphicon glyphicon-edit"></span>
                        </a>

                        @Html.AntiForgeryToken()
                        <a href="@Url.Action("Delete", new { id = item.Entity.Id })" class="btn btn-danger" title="@LayoutStrings.Delete" data-afsm-show-modal="true" data-afsm-delete-warning="@ImageStrings.DeleteWarningMessage">
                            <span class="glyphicon glyphicon-floppy-remove"></span>
                        </a>
                    </form>
                </td>
            </tr>
        }
    </table>

    <span class="text-warning">*: @ImageStrings.VisibilityWarning</span>

    <div class="panel-footer">
        <div class="text-center afsm-pagination">
            @*@Html.PagedListPager((IPagedList)Model, p => Url.Action("Index", "Images", new { pageNumber = p, query = ViewBag.Query, keywordId = ViewBag.KeywordId, classificationId = ViewBag.ClassificationId, documentId = ViewBag.DocumentId, collectionId = ViewBag.CollectionId }))*@
            @Html.PagedListPager((IPagedList)Model, (p) => Url.Action("Index", Url.AddQueryStringToRoute(ViewContext.RouteData.Values, Request, new { pageNumber = p })))
        </div>
    </div>
</div>
