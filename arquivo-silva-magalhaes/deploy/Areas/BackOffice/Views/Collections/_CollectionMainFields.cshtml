@model Collection

@Html.HiddenFor(model => model.Id)

<div class="form-group">
    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EnumDropDownListFor(model => model.Type, @LayoutStrings.ChooseOne, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ProductionPeriod, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.ProductionPeriod, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductionPeriod, "", new { @class = "text-danger" })
    </div>
</div>

@*<div class="form-group">
    @Html.LabelFor(model => model.InitialProductionDate, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.DatePickerFor(model => model.InitialProductionDate, new { @class = "form-control", placeholder = "aaaa-mm-dd" })

        @Html.ValidationMessageFor(model => model.InitialProductionDate, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.EndProductionDate, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.DatePickerFor(model => model.EndProductionDate, new { @class = "form-control", placeholder = "aaaa-mm-dd" })
        @Html.ValidationMessageFor(model => model.EndProductionDate, "", new { @class = "text-danger" })
    </div>
</div>*@

<div class="form-group">
    @Html.LabelFor(model => model.AttachmentsDescriptions, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.AttachmentsDescriptions, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AttachmentsDescriptions, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.OrganizationSystem, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.OrganizationSystem, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.OrganizationSystem, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.IsVisible, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.IsVisible, new { htmlAttributes = new { @class = "checkbox" } })
        @Html.ValidationMessageFor(model => model.IsVisible, "", new { @class = "text-danger" })
        <p class="help-block">
            @CollectionStrings.IsVisibleHint
        </p>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CatalogCode, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-10">
        @Html.EditorFor(model => model.CatalogCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CatalogCode, "", new { @class = "text-danger" })
    </div>
</div>

