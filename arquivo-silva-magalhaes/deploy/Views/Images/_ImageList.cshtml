@model IEnumerable<TranslatedViewModel<Image, ImageTranslation>>

@{
    int index = 0;
}

<div id="afsm-image-list" data-afsm-ajaxurl="@Url.Action("List", "Images", Url.AddQueryStringToRoute(ViewContext.RouteData.Values, Request, excludeProperties: new string[] { "pageNumber" }))">
    @if (Model.Count() > 0)
    {
        <div class="row afsm-dohighlight">
            @foreach (var img in Model)
            {
                <div class="afsm-thumb col-sm-6 col-lg-4">
                    <a href="@Url.Action("Details", "Images", new { img.Entity.Id })"
                       class="thumbnail">
                        @if (img.Entity.ImageUrl != null && img.Entity.ShowImage)
                        {
                            <div class="afsm-thumb-image"
                                 style="background-image: url('@Url.Content("~/Public/Images/" + img.Entity.ImageUrl + "_thumb.jpg")')">

                                <div data-afsm-slideto="@(index++)"
                                     data-afsm-show-overlay="true"
                                     data-afsm-target="#afsm-overlay-carousel"
                                     data-target="#afsm-overlay-carousel"
                                     class="afsm-spacer"></div>

                                <div class="caption">
                                    <h4>
                                        @Html.Truncate(img.Translation.Title, 30)
                                        <small>
                                            &nbsp;@img.Entity.ImageCode
                                        </small>
                                    </h4>
                                    <p>
                                        <small>@Html.Truncate(img.Translation.Description, 80)</small>
                                    </p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="afsm-thumb-image"
                                 style="background-image: url('@Url.Content("~/Content/Images/no-image-400.png")')">

                                <div class="afsm-noimage-caption">
                                    @ImageStrings.NoImage
                                </div>

                                <div class="caption">
                                    <h4>
                                        @Html.Truncate(img.Translation.Title, 30)
                                        <small>
                                            &nbsp;@img.Entity.ImageCode
                                        </small>
                                    </h4>
                                    <p>
                                        <small>@Html.Truncate(img.Translation.Description, 80)</small>
                                    </p>
                                </div>
                            </div>

                            @*<img src="~/Content/Images/no-image.png" />*@
                        }
                        @*<div class="caption">
                                <h4>
                                    @Html.Truncate(img.Translation.Title, 30)
                                    <small>
                                        &nbsp;@img.Entity.ImageCode
                                    </small>
                                </h4>
                                <p>
                                    <small>@Html.Truncate(img.Translation.Description, 80)</small>
                                </p>
                            </div>*@
                    </a>
                </div>
            }

        </div>
        <div class="text-center afsm-pagination">
            @*@Html.PagedListPager((IPagedList)Model, p => Url.Action("Index", "Images", new { pageNumber = p, query = ViewBag.Query, keywordId = ViewBag.KeywordId, classificationId = ViewBag.ClassificationId, documentId = ViewBag.DocumentId, collectionId = ViewBag.CollectionId }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })*@
            @Html.PagedListPager((IPagedList)Model, (p) => Url.Action("Index", Url.AddQueryStringToRoute(ViewContext.RouteData.Values, Request, new { pageNumber = p })), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
        </div>

        @Html.Partial("_ImageOverlayCarousel")
    }
    else
    {
        <div class="alert alert-warning afsm-dohighlight" role="alert">
            @LayoutStrings.NoItems
        </div>
    }
</div>
